KMD
00000000:             ; 
00000000: EA00000B    ;         B main
00000004:             ; 
00000004: 4F 70 65 72 ; op1     DEFB    "Operand 1:  \0"
00000008: 61 6E 64 20 ; 
0000000C: 31 3A 20 20 ; 
00000010: 00          ; 
00000011: 4F 70 65 72 ; op2     DEFB    "Operand 2:  \0"
00000015: 61 6E 64 20 ; 
00000019: 32 3A 20 20 ; 
0000001D: 00          ; 
0000001E: 52 65 73 75 ; op3     DEFB    "Result of Addition:  \0"
00000022: 6C 74 20 6F ; 
00000026: 66 20 41 64 ; 
0000002A: 64 69 74 69 ; 
0000002E: 6F 6E 3A 20 ; 
00000032: 20 00       ; 
00000034:             ; 
00000034:             ;         ALIGN
00000034:             ; 
00000034:             ; main
00000034: E24F0038    ;   ADR   R0, op1                 ; printf("Operand 1: ")
00000038: EF000003    ;   SVC 3                         ; output string (from r0)
0000003C:             ; 
0000003C: EF000005    ;   SVC 5                         ; input int to R0
00000040:             ; 
00000040: E58F002C    ;   STR R0, x                     ; store r0 to mem location x
00000044:             ;   
00000044:             ;   ;;   ADD R1, R0, #0           ; r1 = r0 + 0
00000044:             ; 
00000044:             ;         
00000044: E24F003B    ;   ADR R0, op2                   ; printf("Operand 2: ")
00000048: EF000003    ;   SVC 3                         ; output string (from r0)
0000004C:             ; 
0000004C: EF000005    ;   SVC 5                         ; input int to R0
00000050:             ; 
00000050: E58F0020    ;   STR R0, y                     ; store r0 to mem location y
00000054:             ;         
00000054:             ;   ;;  ADD R1, R1, R0            ; r1 = r1 + r0
00000054:             ; 
00000054:             ;         
00000054: E59F1018    ;   LDR R1, x
00000058: E59F2018    ;   LDR R2, y
0000005C:             ; 
0000005C:             ;         
0000005C: E24F0046    ;   ADR R0, op3                   ; move PC to location of op3
00000060: EF000003    ;   SVC 3                         ; output int            printf(operand 1 + operand 2)
00000064:             ; 
00000064: E0810002    ;   ADD R0, R1, R2                ; r0 = r1 + r2
00000068: E58F000C    ;   STR R0, z                     ; store r0 to mem location z
0000006C:             ;         
0000006C: EF000004    ;   SVC 4
00000070:             ;         
00000070: EF000002    ;   SVC 2                         ; stop the program
00000074:             ; 
00000074:             ;         
00000074: 00000000    ; x DEFW 0
00000078: 00000000    ; y DEFW 0
0000007C: 00000000    ; z DEFW 0
00000080:             ; 

Symbol Table: Labels
: op1                               00000004  Local -- ARM
: op2                               00000011  Local -- ARM
: op3                               0000001E  Local -- ARM
: main                              00000034  Local -- ARM
: x                                 00000074  Local -- ARM
: y                                 00000078  Local -- ARM
: z                                 0000007C  Local -- ARM
